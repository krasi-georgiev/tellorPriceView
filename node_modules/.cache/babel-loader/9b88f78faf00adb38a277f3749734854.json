{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/alert/style\";\nimport _Alert from \"antd/es/alert\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"/Users/vengist/environments/raid/tellorPriceView/src/components/FeedTable/index.js\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport getWeb3 from \"utils/getWeb3\";\nimport PSRs from \"utils/psr\";\nimport TellorFund from \"utils/contracts/TellorFund\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../../assets/Tellor__Loader.json\";\nconst {\n  Column\n} = _Table;\nconst contractAddress = \"0xFe41Cb708CD98C5B20423433309E55b53F79134a\"; //\"0xc47d2339077F5aC117dD1B2953D5c54a0c0B89fa, 0xFe41Cb708CD98C5B20423433309E55b53F79134a\";\n\nexport default (() => {\n  const [priceLoading, setPriceLoading] = useState(true);\n  const [totalTipsLoading, setTotalTipsLoading] = useState(true);\n  const [tableData, setTableData] = useState([]);\n  const [contract, setContract] = useState(false);\n  const [tip, setTip] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [selectedID, setSelectedID] = useState(undefined);\n  const [isMetamask, setIsMetaMask] = useState(false);\n  useEffect(() => {\n    const apiPromises = [];\n    const priceAPIPromises = [];\n    let tempTableData = [...tableData];\n\n    async function web3Connect() {\n      try {\n        const web3 = await getWeb3();\n        setIsMetaMask(web3.currentProvider.isMetaMask);\n        const accounts = await web3.eth.getAccounts();\n        setAccounts(accounts);\n        const instance = await new web3.eth.Contract(TellorFund.abi, contractAddress);\n        setContract(instance);\n        PSRs.map(type => tempTableData.push({\n          type\n        }));\n        setTableData(tempTableData);\n        PSRs.map((item, index) => {\n          apiPromises.push(new Promise((resolve, reject) => {\n            axios.get(`http://api.tellorscan.com/requestinfo/${index + 1}`).then(res => {\n              resolve(res);\n            });\n          }));\n          priceAPIPromises.push(new Promise((resolve, reject) => {\n            axios.get(`http://api.tellorscan.com/price/${index + 1}`).then(res => {\n              resolve(res);\n            });\n          }));\n        });\n        Promise.all(apiPromises).then(function (values) {\n          const totalTips = [..._.map(values, \"data\")];\n          totalTips.map((tipObj, index) => tempTableData[index].totalTip = tipObj.totalTip);\n          setTableData(tempTableData);\n          setTotalTipsLoading(false);\n        });\n        Promise.all(priceAPIPromises).then(values => {\n          const prices = [..._.map(values, \"data\")];\n          prices.map((priceObj, index) => {\n            tempTableData[index].price = priceObj.value;\n          });\n          setTableData(tempTableData);\n          setPriceLoading(false);\n        });\n      } catch (e) {\n        alert(`Failed to load web3, be sure to be connected to the right Metamask network and reload teh browser!`);\n        console.error(e);\n      }\n    }\n\n    web3Connect();\n  }, []);\n\n  const showModal = index => {\n    if (isMetamask) {\n      setSelectedID(index + 1);\n      setVisible(true);\n    } else {\n      _notification[\"warning\"]({\n        message: \"Metamask not found\",\n        description: \"Please install metamask on the browser!\"\n      });\n    }\n  };\n\n  const handleOk = e => {\n    if (tip >= 0) {\n      contract.methods.addTip(selectedID, tip).send({\n        from: accounts[0],\n        to: contractAddress\n      }).then(res => {\n        console.log(\"response: \", res);\n      });\n      setVisible(false);\n    } else {}\n  };\n\n  const handleCancel = e => {\n    console.log(e);\n    setVisible(false);\n  };\n\n  const lottieOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\"\n    }\n  };\n  if (totalTipsLoading || priceLoading) return /*#__PURE__*/React.createElement(Lottie, {\n    options: lottieOptions,\n    height: 36,\n    width: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Table, {\n    dataSource: tableData,\n    bordered: true,\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    title: \"Type\",\n    dataIndex: \"type\",\n    key: \"type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Last Update\",\n    dataIndex: \"price\",\n    key: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"Current Tip\",\n    dataIndex: \"totalTip\",\n    key: \"totalTip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    title: \"\",\n    key: \"action\",\n    align: \"right\",\n    render: (text, record, index) => /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      size: \"small\",\n      onClick: () => showModal(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, \"+ Add Tip\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_Modal, {\n    title: \"Input Tip\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, tip < 0 && /*#__PURE__*/React.createElement(_Alert, {\n    message: \"Tip should be larger than 0\",\n    type: \"error\",\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Basic usage\",\n    onChange: e => setTip(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/vengist/environments/raid/tellorPriceView/src/components/FeedTable/index.js"],"names":["React","useEffect","useState","Fragment","axios","_","getWeb3","PSRs","TellorFund","Lottie","animationData","Column","contractAddress","priceLoading","setPriceLoading","totalTipsLoading","setTotalTipsLoading","tableData","setTableData","contract","setContract","tip","setTip","visible","setVisible","accounts","setAccounts","selectedID","setSelectedID","undefined","isMetamask","setIsMetaMask","apiPromises","priceAPIPromises","tempTableData","web3Connect","web3","currentProvider","isMetaMask","eth","getAccounts","instance","Contract","abi","map","type","push","item","index","Promise","resolve","reject","get","then","res","all","values","totalTips","tipObj","totalTip","prices","priceObj","price","value","e","alert","console","error","showModal","message","description","handleOk","methods","addTip","send","from","to","log","handleCancel","lottieOptions","loop","autoplay","rendererSettings","preserveAspectRatio","text","record","marginBottom","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport { Table, Button, Modal, Input, Alert, notification } from \"antd\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport getWeb3 from \"utils/getWeb3\";\nimport PSRs from \"utils/psr\";\nimport TellorFund from \"utils/contracts/TellorFund\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../../assets/Tellor__Loader.json\";\n\nconst { Column } = Table;\n\nconst contractAddress = \"0xFe41Cb708CD98C5B20423433309E55b53F79134a\"; //\"0xc47d2339077F5aC117dD1B2953D5c54a0c0B89fa, 0xFe41Cb708CD98C5B20423433309E55b53F79134a\";\n\nexport default () => {\n  const [priceLoading, setPriceLoading] = useState(true);\n  const [totalTipsLoading, setTotalTipsLoading] = useState(true);\n  const [tableData, setTableData] = useState([]);\n  const [contract, setContract] = useState(false);\n  const [tip, setTip] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [accounts, setAccounts] = useState([]);\n  const [selectedID, setSelectedID] = useState(undefined);\n  const [isMetamask, setIsMetaMask] = useState(false);\n  useEffect(() => {\n    const apiPromises = [];\n    const priceAPIPromises = [];\n    let tempTableData = [...tableData];\n    async function web3Connect() {\n      try {\n        const web3 = await getWeb3();\n        setIsMetaMask(web3.currentProvider.isMetaMask);\n        const accounts = await web3.eth.getAccounts();\n        setAccounts(accounts);\n        const instance = await new web3.eth.Contract(\n          TellorFund.abi,\n          contractAddress\n        );\n        setContract(instance);\n\n        PSRs.map((type) =>\n          tempTableData.push({\n            type,\n          })\n        );\n        setTableData(tempTableData);\n        PSRs.map((item, index) => {\n          apiPromises.push(\n            new Promise((resolve, reject) => {\n              axios\n                .get(`http://api.tellorscan.com/requestinfo/${index + 1}`)\n                .then((res) => {\n                  resolve(res);\n                });\n            })\n          );\n          priceAPIPromises.push(\n            new Promise((resolve, reject) => {\n              axios\n                .get(`http://api.tellorscan.com/price/${index + 1}`)\n                .then((res) => {\n                  resolve(res);\n                });\n            })\n          );\n        });\n        Promise.all(apiPromises).then(function(values) {\n          const totalTips = [..._.map(values, \"data\")];\n          totalTips.map(\n            (tipObj, index) => (tempTableData[index].totalTip = tipObj.totalTip)\n          );\n          setTableData(tempTableData);\n          setTotalTipsLoading(false);\n        });\n        Promise.all(priceAPIPromises).then((values) => {\n          const prices = [..._.map(values, \"data\")];\n          prices.map((priceObj, index) => {\n            tempTableData[index].price = priceObj.value;\n          });\n          setTableData(tempTableData);\n          setPriceLoading(false);\n        });\n      } catch (e) {\n        alert(\n          `Failed to load web3, be sure to be connected to the right Metamask network and reload teh browser!`\n        );\n        console.error(e);\n      }\n    }\n\n    web3Connect();\n  }, []);\n\n  const showModal = (index) => {\n    if (isMetamask) {\n      setSelectedID(index + 1);\n      setVisible(true);\n    } else {\n      notification[\"warning\"]({\n        message: \"Metamask not found\",\n        description: \"Please install metamask on the browser!\",\n      });\n    }\n  };\n\n  const handleOk = (e) => {\n    if (tip >= 0) {\n      contract.methods\n        .addTip(selectedID, tip)\n        .send({\n          from: accounts[0],\n          to: contractAddress,\n        })\n        .then((res) => {\n          console.log(\"response: \", res);\n        });\n      setVisible(false);\n    } else {\n    }\n  };\n\n  const handleCancel = (e) => {\n    console.log(e);\n    setVisible(false);\n  };\n\n  const lottieOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  if (totalTipsLoading || priceLoading)\n    return <Lottie options={lottieOptions} height={36} width={36} />;\n  return (\n    <Fragment>\n      <Table dataSource={tableData} bordered pagination={false}>\n        <Column title=\"Type\" dataIndex=\"type\" key=\"type\" />\n        <Column title=\"Last Update\" dataIndex=\"price\" key=\"price\" />\n        <Column title=\"Current Tip\" dataIndex=\"totalTip\" key=\"totalTip\" />\n        <Column\n          title=\"\"\n          key=\"action\"\n          align=\"right\"\n          render={(text, record, index) => (\n            <Fragment>\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={() => showModal(index)}\n              >\n                + Add Tip\n              </Button>\n            </Fragment>\n          )}\n        />\n      </Table>\n      <Modal\n        title=\"Input Tip\"\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        {tip < 0 && (\n          <Alert\n            message=\"Tip should be larger than 0\"\n            type=\"error\"\n            style={{ marginBottom: 10 }}\n          />\n        )}\n        <Input\n          placeholder=\"Basic usage\"\n          onChange={(e) => setTip(e.target.value)}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}